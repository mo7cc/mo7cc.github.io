import{_ as s}from"./sysyeminfo-DXuuHYzK.js";import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as l,o as p}from"./app-CDcD9CqU.js";const i="/assets/download-go-Bb1drkhd.png",t={};function o(c,n){return p(),e("div",null,[...n[0]||(n[0]=[l(`<h1 id="_1-安装" tabindex="-1"><a class="header-anchor" href="#_1-安装"><span>1.安装</span></a></h1><p>官网地址：<br><a href="https://golang.google.cn/" target="_blank" rel="noopener noreferrer">https://golang.google.cn/</a></p><p>国内 Wiki<br><a href="https://learnku.com/go/wikis" target="_blank" rel="noopener noreferrer">https://learnku.com/go/wikis</a></p><h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h2><p>可以无脑的依次执行以下命令:</p><div class="hint-container warning"><p class="hint-container-title">注意！</p><p>一定要区分系统的架构类型，尤其是常见的 amd 和 arm 架构。<br> 每次版本更新时 只需要将版本号 <code>go1.23.2</code> 换成最新版本号即可。</p></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看系统类型</span></span>
<span class="line">arch</span>
<span class="line"><span class="token comment"># 下载地址(x86_64)</span></span>
<span class="line"><span class="token assign-left variable">DownloadUrl</span><span class="token operator">=</span><span class="token string">&quot;https://dl.google.com/go/go1.23.6.linux-amd64.tar.gz&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 下载地址(aarch64 arm64)</span></span>
<span class="line"><span class="token comment"># DownloadUrl=&quot;https://dl.google.com/go/go1.23.6.linux-arm64.tar.gz&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 其余系统类型的下载地址可以查看 https://golang.google.cn/dl/</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 开始下载</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-o</span> <span class="token string">&quot;goPackage&quot;</span> <span class="token string">&quot;<span class="token variable">\${DownloadUrl}</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除老版本(亲测，不删除老版本会出现各种莫名其妙的问题)</span></span>
<span class="line"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /usr/lib/go</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 解压 goPackage 到 /usr/lib/go</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> goPackage <span class="token parameter variable">-C</span> /usr/lib</span>
<span class="line"></span>
<span class="line"><span class="token comment">#  删除 goPackage</span></span>
<span class="line"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> goPackage</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时 go 已经被安装到 <code>/usr/lib/go</code> 中了，接下来只需要将 go 指令添加到环境变量中。</p><hr><p>将下面两行追加到 <code>/etc/profile</code> 文件中。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">GOROOT</span><span class="token operator">=</span>/usr/lib/go</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$GOROOT</span>/bin</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重启机器或者执行 <code>source /etc/profile</code>。</p><blockquote><p>环境变量只需要添加一次，后续更新只需要反复执行安装脚本即可。</p></blockquote><h2 id="windows-macos" tabindex="-1"><a class="header-anchor" href="#windows-macos"><span>Windows &amp;&amp; MacOS</span></a></h2><p>第一步，在命令行输入 <code>arch</code> 查看机器硬件架构类型</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">arch</span>
<span class="line"><span class="token comment"># 会打印显示:  arm64 或 x86_64 或其它</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>windows 下则是使用 sysyeminfo 命令</summary><figure><img src="`+s+'" alt="sysyeminfo 命令示意图" tabindex="0" loading="lazy"><figcaption>sysyeminfo 命令示意图</figcaption></figure></details><p>第二步，下载对应的安装包</p><p>官网安装包下载地址：<br><a href="https://golang.google.cn/dl/" target="_blank" rel="noopener noreferrer">https://golang.google.cn/dl/</a></p><p>国内镜像站：<br><a href="https://studygolang.com/dl" target="_blank" rel="noopener noreferrer">https://studygolang.com/dl</a></p><blockquote><p>这利推荐使用官网的下载地址，实测国内镜像存在版本落后问题。</p></blockquote><figure><img src="'+i+`" alt="下载go安装包" tabindex="0" loading="lazy"><figcaption>下载go安装包</figcaption></figure><p>Windows 下载 <code>.mis</code> 文件，无脑下一步<br> MacOS 下载 <code>.pkg</code> 文件，无脑下一步</p><h2 id="检查安装结果" tabindex="-1"><a class="header-anchor" href="#检查安装结果"><span>检查安装结果</span></a></h2><p>打开命令行执行如下命令查看版本号</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">go version</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Linux 、 Windows 、 MacOS 均一样</p></blockquote><h2 id="设置代理" tabindex="-1"><a class="header-anchor" href="#设置代理"><span>设置代理</span></a></h2><p>通常都用的七牛云的：<a href="https://goproxy.cn/" target="_blank" rel="noopener noreferrer">https://goproxy.cn/</a></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># 设置代理</span></span>
<span class="line">go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>on</span>
<span class="line">go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看当前go环境配置，是否修改成功</span></span>
<span class="line">go <span class="token function">env</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Linux 、 Windows 、 MacOS 均一样。<br> Google 和 Github 的官方服务速度很快，一般只有墙内的服务器才需要设置代理。</p></blockquote><h2 id="杀毒软件报错" tabindex="-1"><a class="header-anchor" href="#杀毒软件报错"><span>杀毒软件报错</span></a></h2><p>Go 运行  <code>go test</code>  时，会先编译测试代码为  <strong>临时可执行文件</strong>，并放到系统临时目录（如  <code>C:\\Users\\xxx\\AppData\\Local\\Temp\\go-buildxxx\\...</code>）。</p><p>杀毒软件对  <strong>“临时目录里的新程序”</strong>  比较敏感（这类文件常被病毒利用），加上 Go 编译的程序没有数字签名，更容易被误判为 “可疑程序”。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"></span>
<span class="line"><span class="token comment"># 修改临时构建目录，并自行设置杀软的排除目录</span></span>
<span class="line"><span class="token function">mkdir</span> D:<span class="token punctuation">\\</span>mo7-project<span class="token punctuation">\\</span>.go_temp</span>
<span class="line">go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOTMPDIR</span><span class="token operator">=</span><span class="token string">&quot;D:\\mo7-project\\.go_temp&quot;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意，你需要手动创建该目录，并手动在杀毒软件里面添加排除项</p></blockquote><h2 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world"><span>Hello World</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment">## 初始化仓库</span></span>
<span class="line">go mod init <span class="token operator">&lt;</span>projectName<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>会在当前目录下创建 <code>go.mod</code> 文件，表明该目录为 go 的工作目录。</p></blockquote><p>新建 <code>main.go</code> 文件:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="./main.go"><span>./main.go</span></div><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token comment">// 2&gt;/dev/null ; gorun &quot;$0&quot; &quot;$@&quot; ; exit $?</span></span>
<span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;fmt&quot;</span></span>
<span class="line">	<span class="token string">&quot;os&quot;</span></span>
<span class="line">	<span class="token string">&quot;os/exec&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>Args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	cmd <span class="token operator">:=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">&quot;git&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;version&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// 带输出的执行</span></span>
<span class="line">	out<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">CombinedOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	str<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Getwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;当前目录为&quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span></span>
<span class="line">	os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>然后使用 <code>go</code> 命令执行和编译该文件：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment">## 运行</span></span>
<span class="line">go run main.go <span class="token string">&quot;墨七&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">## 将当前工作区 编译名为 SayHello 二进制可执行文件</span></span>
<span class="line">go build <span class="token parameter variable">-o</span> SayHello</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多版本管理" tabindex="-1"><a class="header-anchor" href="#多版本管理"><span>多版本管理</span></a></h2><p><a href="https://www.cnblogs.com/pebblecome/p/14815365.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/pebblecome/p/14815365.html</a></p><blockquote><p>go 并不需要版本管理，我的建议是直接使用最新版本</p></blockquote>`,46)])])}const m=a(t,[["render",o]]),g=JSON.parse('{"path":"/coder/go/golang_install.html","title":"1.安装","lang":"zh-CN","frontmatter":{"order":1,"permalink":"/coder/go/golang_install.html","description":"1.安装 官网地址： https://golang.google.cn/ 国内 Wiki https://learnku.com/go/wikis Linux 可以无脑的依次执行以下命令: 注意！ 一定要区分系统的架构类型，尤其是常见的 amd 和 arm 架构。 每次版本更新时 只需要将版本号 go1.23.2 换成最新版本号即可。 此时 go 已经...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.安装\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-23T08:31:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"墨七\\",\\"url\\":\\"https://mo7.cc\\",\\"email\\":\\"mo7@mo7.cc\\"}]}"],["meta",{"property":"og:url","content":"https://mo7.cc/coder/go/golang_install.html"}],["meta",{"property":"og:site_name","content":"墨七"}],["meta",{"property":"og:title","content":"1.安装"}],["meta",{"property":"og:description","content":"1.安装 官网地址： https://golang.google.cn/ 国内 Wiki https://learnku.com/go/wikis Linux 可以无脑的依次执行以下命令: 注意！ 一定要区分系统的架构类型，尤其是常见的 amd 和 arm 架构。 每次版本更新时 只需要将版本号 go1.23.2 换成最新版本号即可。 此时 go 已经..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-23T08:31:10.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-23T08:31:10.000Z"}]]},"git":{"createdTime":1732683764000,"updatedTime":1755937870000,"contributors":[{"name":"墨七","username":"","email":"meichangliang@outlook.com","commits":9}]},"readingTime":{"minutes":2.37,"words":710},"filePathRelative":"coder/go/1.安装.md","excerpt":"\\n<p>官网地址：<br>\\n<a href=\\"https://golang.google.cn/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://golang.google.cn/</a></p>\\n<p>国内 Wiki<br>\\n<a href=\\"https://learnku.com/go/wikis\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://learnku.com/go/wikis</a></p>\\n<h2>Linux</h2>\\n<p>可以无脑的依次执行以下命令:</p>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意！</p>\\n<p>一定要区分系统的架构类型，尤其是常见的 amd 和 arm 架构。<br>\\n每次版本更新时 只需要将版本号 <code>go1.23.2</code> 换成最新版本号即可。</p>\\n</div>","autoDesc":true}');export{m as comp,g as data};
