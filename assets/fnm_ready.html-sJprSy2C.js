import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as o,d as s,e as n,b as t,w as i,r as d,o as p}from"./app-CDcD9CqU.js";const c={};function m(u,e){const a=d("RouteLink");return p(),r("div",null,[e[7]||(e[7]=o(`<h1 id="_2-fnm-管理-nodejs" tabindex="-1"><a class="header-anchor" href="#_2-fnm-管理-nodejs"><span>2.fnm 管理 Nodejs</span></a></h1><p>当你本地存在多个项目，且依赖的 nodejs 版本不尽相同，就需要使用 nodejs 版本管理工具了，它允许同一台机器中多个 nodejs 版本共存且可以随时切换。</p><p>fnm 类似于 nvm，是一个 nodejs 版本管理工具， 他比 nvm 更加迅速，应该是目前已知最好的 nodejs 版本管理工具。</p><p>fnm 的特点是:</p><ul><li>跨平台，支持 macOS、Windows、Linux。</li><li>使用 Rust 编写，速度快。发布为单文件，便于安装。</li><li>支持按应用自动切换 Node.js 版本。</li></ul><p>fnm 的 Github 仓库地址：<br><a href="https://github.com/Schniz/fnm" target="_blank" rel="noopener noreferrer">https://github.com/Schniz/fnm</a></p><h2 id="安装-fnm" tabindex="-1"><a class="header-anchor" href="#安装-fnm"><span>安装 fnm</span></a></h2><p>macOS &amp;&amp; Linux</p><p>第一步， 打开命令行执行如下操作</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://fnm.vercel.app/install <span class="token operator">|</span> <span class="token function">bash</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第二步， 添加如下环境变量配置国内镜像</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="~/.zshenv 或 ~/.bashrc 文件中"><span>~/.zshenv 或 ~/.bashrc 文件中</span></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment">#  ~/.zshenv 或 ~/.bashrc 文件中:</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">FNM_NODE_DIST_MIRROR</span><span class="token operator">=</span>https://npmmirror.com/mirrors/node/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="fnm-的基本使用" tabindex="-1"><a class="header-anchor" href="#fnm-的基本使用"><span>fnm 的基本使用</span></a></h2><p>罗列远程服务器上所有的 nodejs 版本</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">fnm ls-remote</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p>安装某一个版本的 nodejs</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">fnm <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例如：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">fnm <span class="token function">install</span> <span class="token number">20</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>则会安装 <code>Node v20.13.1 (arm64)</code> 也就是 node v20 的最新版本</p><hr><p>列出当前机器上已经安装的所有 nodejs 版本</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">fnm <span class="token function">ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p>卸载某一版本的 Node</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">fnm uninstall  <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p>切换 Node 版本</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">fnm use <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p>将某一版本设为默认</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">fnm default <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><div class="hint-container info"><p class="hint-container-title">这一套操作相当于完成了 fnm 对本地 nodejs 一些基本操作</p><p>增: <code>fnm install</code><br> 删: <code>fnm uninstall</code><br> 改: <code>fnm use</code> 和 <code>fnm default</code><br> 查: <code>fnm ls-remote</code> 和 <code>fnm ls</code></p><p>在使用过 <code>fnm use</code> 命令后，就可以直接使用 对应的 node 版本了。</p></div><h2 id="windows-环境下不推荐使用-fnm" tabindex="-1"><a class="header-anchor" href="#windows-环境下不推荐使用-fnm"><span>Windows 环境下不推荐使用 fnm</span></a></h2>`,36)),s("p",null,[e[1]||(e[1]=n("因为我 Windows 开发环境一直使用的是 ",-1)),t(a,{to:"/misc/wsl_ready.html"},{default:i(()=>[...e[0]||(e[0]=[n("WSL 子系统",-1)])]),_:1}),e[2]||(e[2]=n(" ，如果 Windows 环境需要使用 nodejs 我建议直接下载 ",-1)),e[3]||(e[3]=s("code",null,".msi",-1)),e[4]||(e[4]=n(" 安装包进行使用。",-1))]),s("p",null,[e[6]||(e[6]=n("详情可参考 ",-1)),t(a,{to:"/coder/javascript/nodejs_ready.html"},{default:i(()=>[...e[5]||(e[5]=[n("nodejs 基础环境搭建",-1)])]),_:1})])])}const b=l(c,[["render",m]]),f=JSON.parse('{"path":"/coder/javascript/fnm_ready.html","title":"2.fnm 管理 Nodejs","lang":"zh-CN","frontmatter":{"order":2,"permalink":"/coder/javascript/fnm_ready.html","description":"2.fnm 管理 Nodejs 当你本地存在多个项目，且依赖的 nodejs 版本不尽相同，就需要使用 nodejs 版本管理工具了，它允许同一台机器中多个 nodejs 版本共存且可以随时切换。 fnm 类似于 nvm，是一个 nodejs 版本管理工具， 他比 nvm 更加迅速，应该是目前已知最好的 nodejs 版本管理工具。 fnm 的特点是:...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.fnm 管理 Nodejs\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T14:04:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"墨七\\",\\"url\\":\\"https://mo7.cc\\",\\"email\\":\\"mo7@mo7.cc\\"}]}"],["meta",{"property":"og:url","content":"https://mo7.cc/coder/javascript/fnm_ready.html"}],["meta",{"property":"og:site_name","content":"墨七"}],["meta",{"property":"og:title","content":"2.fnm 管理 Nodejs"}],["meta",{"property":"og:description","content":"2.fnm 管理 Nodejs 当你本地存在多个项目，且依赖的 nodejs 版本不尽相同，就需要使用 nodejs 版本管理工具了，它允许同一台机器中多个 nodejs 版本共存且可以随时切换。 fnm 类似于 nvm，是一个 nodejs 版本管理工具， 他比 nvm 更加迅速，应该是目前已知最好的 nodejs 版本管理工具。 fnm 的特点是:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T14:04:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-04T14:04:00.000Z"}]]},"git":{"createdTime":1732683764000,"updatedTime":1751637840000,"contributors":[{"name":"墨七","username":"","email":"meichangliang@outlook.com","commits":7}]},"readingTime":{"minutes":1.54,"words":462},"filePathRelative":"coder/javascript/2.fnm管理nodejs.md","excerpt":"\\n<p>当你本地存在多个项目，且依赖的 nodejs 版本不尽相同，就需要使用 nodejs 版本管理工具了，它允许同一台机器中多个 nodejs 版本共存且可以随时切换。</p>\\n<p>fnm 类似于 nvm，是一个 nodejs 版本管理工具， 他比 nvm 更加迅速，应该是目前已知最好的 nodejs 版本管理工具。</p>\\n<p>fnm 的特点是:</p>\\n<ul>\\n<li>跨平台，支持 macOS、Windows、Linux。</li>\\n<li>使用 Rust 编写，速度快。发布为单文件，便于安装。</li>\\n<li>支持按应用自动切换 Node.js 版本。</li>\\n</ul>\\n","autoDesc":true}');export{b as comp,f as data};
