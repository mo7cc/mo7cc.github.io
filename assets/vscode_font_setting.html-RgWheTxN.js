import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o}from"./app-CDcD9CqU.js";const p="data:image/png;base64,",t="/assets/Monaspace-lian-B8nmXhmC.png",c="/assets/Monaspace-install-BBHWWiyM.png",i="/assets/Consolas-terminal-D7uUegYq.png",l="/assets/Monaspace-terminal-CxU665bi.png",r="/assets/Monaspace-vscode-Cd0PGjEJ.png",d={};function u(m,n){return o(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="_9-字体" tabindex="-1"><a class="header-anchor" href="#_9-字体"><span>9.字体</span></a></h1><p>最开始用的是系统默认的字体来编写代码，但是有点费眼睛。但一直也没什么。后来无意中发现了 <code>Consolas</code>，瞬间感觉整个代码界面都清爽了好多好多，辨识度也高了很多。<br> Consolas 就这样被我用了好多年。</p><p>然后前几天我打算好好重新给自己找一款字体。</p><p>然后发现了这个神级的编程字体： <code>Monaspace</code> <br> 尤其是它的 <code>Argon</code> 系列，怎么看怎么爱，比 Consolas 舒服太多了。</p><p><a href="https://monaspace.githubnext.com" target="_blank" rel="noopener noreferrer">https://monaspace.githubnext.com</a></p><p>然后我就饶有兴趣的研究了一下字体相关的知识。</p><h2 id="辨识度" tabindex="-1"><a class="header-anchor" href="#辨识度"><span>辨识度</span></a></h2><p>首先对于编程来说有一些非常硬核的需求: <br><code>1ilLI0oO</code> <br> 你能分得清这些都是啥嘛？</p><p>他们分别是，数字 <code>1</code>，小写字母 <code>i</code>，小写字母<code>l</code>，大写字母 <code>L</code>，大写字母 <code>I</code>数字 <code>0</code>，小写字母 <code>o</code>，大写字母 <code>O</code>。<br> 包括命令行。</p><p>所以一些字母和数字之间的区分，是非常重要的一项指标。</p><h2 id="等宽" tabindex="-1"><a class="header-anchor" href="#等宽"><span>等宽</span></a></h2><p>另一项重要指标是 <code>等宽</code> 也就是很多字中带有的 <code>mono</code> 标识。</p><p><a href="https://zh.wikipedia.org/wiki/%E7%AD%89%E5%AE%BD%E5%AD%97%E4%BD%93" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/等宽字体</a></p><p>等宽字体在阅读，排版，代码对比上会非常省力，基本上是编程字体的赢需求。</p><h2 id="衬线" tabindex="-1"><a class="header-anchor" href="#衬线"><span>衬线</span></a></h2><p>又称为有衬线体、衬线字、曲线描边字，俗称白体字。<br> 比如 宋体 就是标准的衬线字体，他们的特点是在笔画的起始和末端设置一些装饰。</p><p><a href="https://zh.wikipedia.org/wiki/%E8%A1%AC%E7%BA%BF%E4%BD%93" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/衬线体</a></p><p>我个人非常讨厌衬线字体，因为末端的装饰在我看来就是一种干扰。我比较喜欢黑体这种无衬线风格的，还有隶书这种近似手写风格弱衬线的。</p><p>所以选择字体一定必须是 <code>等宽无衬线</code> 的</p><h2 id="consolas" tabindex="-1"><a class="header-anchor" href="#consolas"><span>Consolas</span></a></h2><p>Consolas 是微软专门为编程设计字体，是<code>宇宙 IDE Visual Studio</code> 的默认字体。</p><p><a href="https://zh.wikipedia.org/wiki/Consolas" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/Consolas</a></p><p>它是非常标准的 <code>等宽无衬线</code> 字体。当然，我在最初使用 Consolas 的时候并没有什么等宽衬线这些概念，仅仅是无意识之举，因为这个字体的名称很像 <code>Console</code> 我就选择了它，结果一下子感觉就像给眼睛来了一次大保健！然后就一发不可收拾，我的好几台电脑，浏览器，编辑器，命令行，所有的可以显示英文的地方我都换上了这种字体。看起来贼舒坦。</p><p>但是这款被我用了好几年的字体前昨天被我用 <code>Monaspace Argon</code> 取代了。</p><h2 id="字体文件格式与选择" tabindex="-1"><a class="header-anchor" href="#字体文件格式与选择"><span>字体文件格式与选择</span></a></h2><p>这里我就不赘述了，直接看链接</p><p><a href="https://ziyouziti.com/art-23.html" target="_blank" rel="noopener noreferrer">https://ziyouziti.com/art-23.html</a></p><p>总结一下，我们一般需要关注的几个名词：</p><p><code>.ttf</code> 也就是 <code>TrueType</code> 格式，Win 和 macOS 通用格式，也是主流格式，特点显示和打印一致性很好，可以随意缩放不会出现锯齿，兼容性也是最好的。</p><p><code>.otf</code> 也就是 <code>OpenType</code> 微软和 Adobe 共用研发的字体，macOS 也有很好的支持。致力于取代 <code>ttf</code></p><p><code>woff</code> 和 <code>woff2</code> <code>Web Open Font Format</code> 的缩写，前者兼容老旧浏览器，后者泽专用于现代浏览器，特点是体积小，专用于 web 网页。</p><p><code>.ttc</code> 是多个 <code>ttf</code> 的合成字库，多个字体糅合在一起，以减小体积。</p><p>其余的字体格式多多少少都会存在一些兼容性问题，建议直接忽略。</p><p><code>Light</code>, <code>Medium</code> 和 <code>Bold</code> 是字体的粗细版本。</p><p>我们一般关注 <code>Regular</code> 常规版本就好了。</p><p>还有一种是 <code>variable fonts</code> 一般标注 <code>variable</code> 或者 <code>VF</code></p><p>俗称 <code>可变字体</code>，它是一种多种字体格式的单文件版，是一种数字时代制作的字体技术，它将斜体，粗体，拉伸，变形全都存储在一个 字体文件中。</p><p>如果你下载的字体包里面有 VF 字样的字体，则只需要安装这个即可，无需犹豫。</p><blockquote><p>相关阅读 <a href="https://zh.wikipedia.org/wiki/%E5%8F%AF%E5%8F%98%E5%AD%97%E4%BD%93" target="_blank" rel="noopener noreferrer">https://zh.wikipedia.org/wiki/可变字体</a></p></blockquote><h2 id="字体的安装与卸载" tabindex="-1"><a class="header-anchor" href="#字体的安装与卸载"><span>字体的安装与卸载</span></a></h2><p>目前来说，在 Windows 下和 macOS 下直接双击下载好的字体文件，左上角就会出现安装按钮，直接点击安装即可。</p><p>Windows 下打开控制面板搜索 <code>字体 -&gt; 添加和删除字体</code> 找到对应的字体文件右键就会出现删除选项。</p><p>macOS 下直接打开 <code>字体册.app</code> 找到对应的字体右键移除即可。</p><h2 id="字体的选择" tabindex="-1"><a class="header-anchor" href="#字体的选择"><span>字体的选择</span></a></h2><p>选择字体的时候我想把中文也给换了，弄一套中英文都兼容的字体。</p><p>一般来说在设置 fontFamily 时，系统会按顺序使用字体，比如：</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;Consolas&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;霞鹜文楷GB Mono SC&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 <code>Consolas</code> 只包含 英文字母，数字，以及一些英文的标点符号，大小只有几十 KB 左右。它的字体渲染并不包含中文，而 <code>霞鹜文楷GB</code> 则是包含字母，数字，英文，汉字，繁体，甚至是日文的字体渲染，大小几百 M。如果 <code>霞鹜文楷GB</code> 放前面，那么基本上你的任意一个字符都可用 <code>霞鹜文楷GB</code> 去展示，<code>Consolas</code> 字体压根就没有任何效果。<br> 所以把英文字符放在前面，中文字体放后面，字母数字就会使用英文字体，显示汉字的时候找不到，退而求其次系统会使用第二位置的字体，再找不到会使用第三位直到最后使用系统字体。</p><blockquote><p>如果系统字体也无法显示该字符，则会展示是一个 <em>方框问号</em> 表示乱码。不同的字体族显示的乱码会不太一样，有的字体甚至会用一个表情来进行占位。</p></blockquote><p>我花了一天时间亲身尝试了以下字体以及组合。</p><p><code>霞鹜文楷 GB Mono SC</code><br> 很优秀的字体，很全面，开源免费，中文看起来很好看，英文紧凑大气。<br><code>GB</code> 是作者做了一些修改，表示这个是遵循国家标准的，适合用来打印的字体。<br><a href="https://github.com/lxgw/LxgwWenKaiGB" target="_blank" rel="noopener noreferrer">https://github.com/lxgw/LxgwWenKaiGB</a><br> 我的推荐榜单第四名。</p><hr><p><code>思源黑体</code><br><a href="https://github.com/adobe-fonts/source-han-sans/blob/master/README-CN.md" target="_blank" rel="noopener noreferrer">https://github.com/adobe-fonts/source-han-sans/blob/master/README-CN.md</a><br> 很好看的一款字体，非常适合阅读。血脉纯正。<br> 我的推荐榜单第三名。</p><hr><p><code>MiSans</code><br> 小米手机系统的默认字体，我觉得很大气很好看。版式很多，支持的语言也很多，很全，但是他有一个很严重的缺陷，就是一般的字体渲染字库里面没有的文字时会显示一个乱码占位符，但是小米的这款 <code>MiSans</code> 就是一个空白的，这会给人一个错误的信息。这个是完全不能忍的。当然，你也可以选择安装更全的版本。<br><a href="https://hyperos.mi.com/font/zh/" target="_blank" rel="noopener noreferrer">https://hyperos.mi.com/font/zh/</a></p><hr><p><code>更纱黑体</code><br> 这个字体很棒，英文中文都很 Nice，看起来很不错，而且非常标准，开源，是一组整合字体，基于思源黑体。字母数字写代码都没啥问题。所以 <code>更纱黑体</code> 可以看作是<code>思源黑体</code>的上位替代。我的推荐榜单第二名。<br><a href="https://github.com/be5invis/Sarasa-Gothic" target="_blank" rel="noopener noreferrer">https://github.com/be5invis/Sarasa-Gothic</a></p><hr><p>还有其它的字体，但是多多少少都会存在一些不满意的地方。<br> 因为我家里用的是 Windows 台式机，在公司用的 macOS，所以在公司看一天电脑回到家之后会发现各种不对劲儿，原因就是因为同一个字体在不同系统之下显示效果会不一样....</p><h2 id="最佳编程字体组合" tabindex="-1"><a class="header-anchor" href="#最佳编程字体组合"><span>最佳编程字体组合</span></a></h2><p><code>Monaspace</code></p><p><a href="https://monaspace.githubnext.com" target="_blank" rel="noopener noreferrer">https://monaspace.githubnext.com</a></p><p>这货我就不过多介绍了，大家看官网，这货和 go 语言一样，主打一个 <code>现代化血脉牛逼 + 政治无解</code>。<br> 是<code>GithubNext</code>的子项目之一，主打一个专为编程而生。</p><h3 id="风格" tabindex="-1"><a class="header-anchor" href="#风格"><span>风格</span></a></h3><p>一种字体族五种风格可选。</p><p><code>Neon（现代风格字体）</code>：无衬线的等宽风格，看起来很规整，非常适合大标题，打印这种形式的。缺点是 <code>e o c</code> 这些字母都是圆的，太圆了，区别度不高看起来很闹心。太过板正。作为标题我是首推的，但是编程大部分都是一排排的小字母。</p><p><code>Argon（人文风格字体）</code>：这是我最满意的一款字体，各个方面都非常接近 <code>Consolas</code> 但是比 它更清晰，更大气，更规整更宽阔，字母整齐划一，辨识明显。缺点是作为标题不如 <code>Neon</code> 大气规整，但也不差。还有一点是 它的小写字母 <code>t</code> 的左上角是连起来的，但是看习惯之后也还可以。</p><p><code>Xenon（衬线风格字体）</code>：它的衬线是很弱的那种，但是和 <code>Neon</code> 一样 <code>e o c</code> 这些太圆了，摆在一起看着闹心。而且带衬线，对我来说干扰太严重了。</p><p><code>Radon（手写风格字体）</code>：手写体风格，看习惯之后很好看，但是对我来说手写体是一种识别负担。</p><p><code>Krypton（机械风格字体）</code>：机械体，非常直愣愣的拐角，我想说，作为编程字体来说这种字体显示效果真的非常干净清爽，识别率非常高。但是缺点就是作为大标题太丑了！不过编程都是小字母问题不大的。</p><p>综上所述，我最终选择了一个中庸的方案: <code>Argon（人文风格字体）</code> 综合各个方面来看，这款字体没有短板但是优于 <code>Consolas</code> 这就够了。</p><figure><img src="`+p+'" alt="Argon 字母数字标点符号都很舒服" tabindex="0" loading="lazy"><figcaption>Argon 字母数字标点符号都很舒服</figcaption></figure><h3 id="编程连字" tabindex="-1"><a class="header-anchor" href="#编程连字"><span>编程连字</span></a></h3><p>它最棒的地方在于，它的连字风格是可以选择的！<br> 很多时候一些连字纯纯的是干扰，但是有一些连字确实非常有用的</p><p>比如 <code>&gt;=</code> 和 <code>&lt;=</code>，以及 <code>===</code> 和 <code>!==</code> 双斜杠 <code>//</code> <code>/**</code> 等 ，因为这些字符在编程上面基本属于通用的 <code>基本组合</code>。<br> 但是另外一些什么 <code>==&gt;</code> <code>-~</code> 这些连字之后看起来和一些现有字符太像了，容易误判。</p><p>但是 Monaspace 直接提供了一些选择供你挑选，这服务意识直接拉满！</p><figure><img src="'+t+`" alt="连字组合选择" tabindex="0" loading="lazy"><figcaption>连字组合选择</figcaption></figure><p>比如我只选择了 大于等于和小于等于 那么在 VSCode 中做如下设置即可。</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="settings.json"><span>settings.json</span></div><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;editor.fontFamily&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Monaspace Argon Var&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.fontLigatures&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;calt&#39;, &#39;ss02&#39;&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>至于中文字体，我折腾了好久好久，我发现还是使用系统默认字体最舒服。要相信资本做出的选择，它们花了几百亿打造的操作系统，怎么可能会用一款让人不舒服的字体呢?</p><p>PS：实测，在 Mac 上 <code>苹方-简</code> 显示最好，在 Windows 上 <code>微软雅黑</code> 显示最好，当然这俩也是系统默认字体。其它的字符渲染总有毛边。所以配置文件这么写中文字体就会直接用系统默认字体进行显示了。</p><p>当然，如果想要在 Windows 上使用 苹方-简，可以在这个地址下载。<br><a href="https://github.com/ZWolken/PingFang" target="_blank" rel="noopener noreferrer">https://github.com/ZWolken/PingFang</a><br> 那么配置文件就是:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="settings.json"><span>settings.json</span></div><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;editor.fontFamily&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;Monaspace Argon Var&#39;,&#39;PingFang SC&#39;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.fontLigatures&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;calt&#39;, &#39;ss02&#39;&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>然后我日常看电子书的时候使用的是思源黑体，习惯了，所以我的设置是这样的:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="settings.json"><span>settings.json</span></div><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;editor.fontFamily&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;Monaspace Argon Var&#39;,&#39;Sarasa Mono SC&#39;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;editor.fontLigatures&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&#39;calt&#39;, &#39;ss02&#39;&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>这里我安装的是 <code>SarasaMonoSC-Light.ttf</code> 也就是 <code>等距更纱黑体 SC</code> 。个人感觉比 <code>PingFang SC</code> 和 <code>微软雅黑</code> 要舒服一点点。<br> 然后 <code>Monaspace</code> 常规体比 <code>Light</code> 要粗一点，所以在 VSCode 中数字 和字母就比 汉字粗一点点，直接变相的相当于突出显示了 字母和汉字。这样在阅读一些说明文档的时候非常有用。<br> 当我禁用 等距更纱黑体 SC 的时候，就会直接看到 苹方-简 或者 微软雅黑 的效果。</p><blockquote><p>SC 指的是简体中文。</p></blockquote><h2 id="monaspace-的下载与安装" tabindex="-1"><a class="header-anchor" href="#monaspace-的下载与安装"><span>Monaspace 的下载与安装</span></a></h2><p>通过官网 <a href="https://monaspace.githubnext.com" target="_blank" rel="noopener noreferrer">https://monaspace.githubnext.com</a> 进入到 Github 仓库，右边的 <code>Releases</code> 当前是 <code>v1.101</code> 版本，然后直接下载 <code>.zip</code> 文件。</p><figure><img src="`+c+'" alt="安装 MonaspaceArgonVarVF" tabindex="0" loading="lazy"><figcaption>安装 MonaspaceArgonVarVF</figcaption></figure><p>顶部显示的 <code>Monaspace Argon Var</code> 就是这款字体的名字，直接把名字放到配制文件中即可。然后重启 VSCode，当你的数字 <code>0</code> 中间显示有圆点则表示使用成功。</p><p>与 Consolas 对比</p><figure><img src="'+i+'" alt="Consolas 终端显示效果" tabindex="0" loading="lazy"><figcaption>Consolas 终端显示效果</figcaption></figure><figure><img src="'+l+'" alt="Monaspace 终端显示效果" tabindex="0" loading="lazy"><figcaption>Monaspace 终端显示效果</figcaption></figure><blockquote><p>可以明先看到 Monaspace 要清晰大气不少</p></blockquote><figure><img src="'+r+`" alt="Monaspace VSCode 显示效果" tabindex="0" loading="lazy"><figcaption>Monaspace VSCode 显示效果</figcaption></figure><blockquote><p>在 Markdown 中连字效果依然存在，代码阅读体验上升好几个档次。</p></blockquote><h2 id="文字渲染预览-可以直接复制粘贴使用" tabindex="-1"><a class="header-anchor" href="#文字渲染预览-可以直接复制粘贴使用"><span>文字渲染预览(可以直接复制粘贴使用)</span></a></h2><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code class="language-txt"><span class="line">0123456789</span>
<span class="line">abcdefghijklmnopqrstuvwxyz</span>
<span class="line">ABCDEFGHIJKLMNOPQRSTUVWXYZ</span>
<span class="line">披绣闼，俯雕甍，山原旷其盈视，川泽纡其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰弥津，青雀黄龙之舳。云销雨霁，彩彻区明。</span>
<span class="line">落霞与孤鹜齐飞，秋水共长天一色。</span>
<span class="line">渔舟唱晚，响穷彭蠡之滨，雁阵惊寒，声断衡阳之浦。(迷津 一作：弥津；云销雨霁，彩彻区明 一作：虹销雨霁，彩彻云衢)</span>
<span class="line">魣𡈼𮬛</span>
<span class="line">?</span>
<span class="line">?。，,. &quot;&quot; &#39;&#39; &#39;&#39;&quot; &quot;x&quot; &#39;x&#39; “” ‘’ “asd” ‘爱仕达’</span>
<span class="line">落霞与孤鹜齐飞，秋水共长天一色。</span>
<span class="line">11 &lt;= ss</span>
<span class="line">22 &gt;= 33</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Import required module</span></span>
<span class="line"><span class="token keyword">const</span> process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// Define a class for Terminal</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Terminal_Dimensions</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>columns<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>rows<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 0123456789</span></span>
<span class="line"><span class="token comment">// abcdefghijklmnopqrstuvwxyz</span></span>
<span class="line"><span class="token comment">// ABCDEFGHIJKLMNOPQRSTUVWXYZ</span></span>
<span class="line"><span class="token comment">// Aa Bb Cc Dd Ee Ff Gg Hh Ii Jj Kk Ll Mm Nn Oo Pp Qq Rr Ss Tt Uu Vv Ww Xx Yy Zz</span></span>
<span class="line"><span class="token comment">// abcdefg iIlL1</span></span>
<span class="line"><span class="token comment">// 按时打油</span></span>
<span class="line"><span class="token comment">// =&gt;  &lt;= &gt;=  ===</span></span>
<span class="line"><span class="token comment">// One superfamily.</span></span>
<span class="line"><span class="token comment">// Five fonts.</span></span>
<span class="line"><span class="token comment">// Three variable axes.</span></span>
<span class="line"><span class="token comment">// &#39;a&#39;  &quot;x&quot; “1”  ‘x’</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Implement timing</span></span>
<span class="line"><span class="token keyword">let</span> timing_start<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token parameter">time_limit</span> <span class="token operator">=&gt;</span> <span class="token number">9999</span><span class="token punctuation">;</span> <span class="token comment">// maximum time limit in milliseconds</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,100)])])}const b=s(d,[["render",u]]),v=JSON.parse('{"path":"/bookmark/tools/vscode/vscode_font_setting.html","title":"9.字体","lang":"zh-CN","frontmatter":{"order":9,"permalink":"/bookmark/tools/vscode/vscode_font_setting.html","description":"9.字体 最开始用的是系统默认的字体来编写代码，但是有点费眼睛。但一直也没什么。后来无意中发现了 Consolas，瞬间感觉整个代码界面都清爽了好多好多，辨识度也高了很多。 Consolas 就这样被我用了好多年。 然后前几天我打算好好重新给自己找一款字体。 然后发现了这个神级的编程字体： Monaspace 尤其是它的 Argon 系列，怎么看怎么爱...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9.字体\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T14:04:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"墨七\\",\\"url\\":\\"https://mo7.cc\\",\\"email\\":\\"mo7@mo7.cc\\"}]}"],["meta",{"property":"og:url","content":"https://mo7.cc/bookmark/tools/vscode/vscode_font_setting.html"}],["meta",{"property":"og:site_name","content":"墨七"}],["meta",{"property":"og:title","content":"9.字体"}],["meta",{"property":"og:description","content":"9.字体 最开始用的是系统默认的字体来编写代码，但是有点费眼睛。但一直也没什么。后来无意中发现了 Consolas，瞬间感觉整个代码界面都清爽了好多好多，辨识度也高了很多。 Consolas 就这样被我用了好多年。 然后前几天我打算好好重新给自己找一款字体。 然后发现了这个神级的编程字体： Monaspace 尤其是它的 Argon 系列，怎么看怎么爱..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T14:04:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-04T14:04:00.000Z"}]]},"git":{"createdTime":1732683764000,"updatedTime":1751637840000,"contributors":[{"name":"墨七","username":"","email":"meichangliang@outlook.com","commits":5}]},"readingTime":{"minutes":11.28,"words":3384},"filePathRelative":"bookmark/tools/vscode/9.字体.md","excerpt":"\\n<p>最开始用的是系统默认的字体来编写代码，但是有点费眼睛。但一直也没什么。后来无意中发现了 <code>Consolas</code>，瞬间感觉整个代码界面都清爽了好多好多，辨识度也高了很多。<br>\\nConsolas 就这样被我用了好多年。</p>\\n<p>然后前几天我打算好好重新给自己找一款字体。</p>\\n<p>然后发现了这个神级的编程字体： <code>Monaspace</code> <br>\\n尤其是它的 <code>Argon</code> 系列，怎么看怎么爱，比 Consolas 舒服太多了。</p>\\n<p><a href=\\"https://monaspace.githubnext.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://monaspace.githubnext.com</a></p>","autoDesc":true}');export{b as comp,v as data};
