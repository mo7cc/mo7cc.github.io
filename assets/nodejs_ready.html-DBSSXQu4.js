import{_ as l}from"./sysyeminfo-DXuuHYzK.js";import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as e,d as a,e as s,b as t,w as p,r as c,o as d}from"./app-CDcD9CqU.js";const m="/assets/download_nodejs-CWexOBw1.png",h="/assets/npm_local_propxy-DE7imWqS.png",u={};function b(g,n){const i=c("RouteLink");return d(),r("div",null,[n[4]||(n[4]=e(`<h1 id="_1-nodejs-基础环境搭建" tabindex="-1"><a class="header-anchor" href="#_1-nodejs-基础环境搭建"><span>1.Nodejs 基础环境搭建</span></a></h1><p>严格来说 <code>nodejs</code> 属于服务端的技术，并不属于 <code>Web 前端</code> , 但是当下前端开发基本上无法离开 <code>nodejs</code> 了。</p><p>官网地址：<br><a href="https://nodejs.org/" target="_blank" rel="noopener noreferrer">https://nodejs.org/</a></p><h2 id="在-macos-和-windows-上安装-node-js" tabindex="-1"><a class="header-anchor" href="#在-macos-和-windows-上安装-node-js"><span>在 macOS 和 Windows 上安装 Node.js</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>macOS 和 Windows 官方都有发布安专门的安装包，所以安装方式基本相同，但是得注意区分硬件架构。</p></div><h3 id="第一步-查看机器硬件架构类型" tabindex="-1"><a class="header-anchor" href="#第一步-查看机器硬件架构类型"><span>第一步，查看机器硬件架构类型</span></a></h3><p>打开终端做如下输入并回车</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">arch</span>
<span class="line"><span class="token comment"># 会打印显示如:  arm64 或 x86_64 或其它</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>windows 下则是使用 sysyeminfo 命令</summary><figure><img src="`+l+'" alt="sysyeminfo 命令示意图" tabindex="0" loading="lazy"><figcaption>sysyeminfo 命令示意图</figcaption></figure></details><h3 id="第二步-下载安装包" tabindex="-1"><a class="header-anchor" href="#第二步-下载安装包"><span>第二步，下载安装包</span></a></h3><p><a href="https://nodejs.org/en/download/prebuilt-installer" target="_blank" rel="noopener noreferrer">https://nodejs.org/en/download/prebuilt-installer</a></p><figure><img src="'+m+`" alt="下载NodeJS" tabindex="0" loading="lazy"><figcaption>下载NodeJS</figcaption></figure><p>然后双击运行无脑下一步。</p><h2 id="linux-下安装-nodejs" tabindex="-1"><a class="header-anchor" href="#linux-下安装-nodejs"><span>Linux 下安装 NodeJs</span></a></h2><p>Github 文档:</p><p><a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener noreferrer">https://github.com/nodesource/distributions</a></p><p>总结下来就 3 行命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://deb.nodesource.com/setup_lts.x <span class="token parameter variable">-o</span> nodesource_setup.sh</span>
<span class="line"><span class="token function">bash</span> nodesource_setup.sh</span>
<span class="line"><span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> nodejs</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Github 文档写的非常详细，这里就不再赘述了。</p><h2 id="验证安装结果" tabindex="-1"><a class="header-anchor" href="#验证安装结果"><span>验证安装结果</span></a></h2><p>重启终端做如下输入</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">node</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token comment"># 会打印当前 nodejs 版本如： v20.12.2</span></span>
<span class="line"></span>
<span class="line"><span class="token function">npm</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token comment"># 会打印当前 npm 版本如： 10.5.2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>至此 nodejs 安装成功</p></blockquote><h2 id="npm-加速设置" tabindex="-1"><a class="header-anchor" href="#npm-加速设置"><span>npm 加速设置</span></a></h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>npm 是 nodejs 的默认包管理器，其官方镜像地址 <a href="https://registry.npmjs.org" target="_blank" rel="noopener noreferrer">https://registry.npmjs.org</a> 在海外，直接使用会出现各种依赖安装失败的问题。<br> 所以一般都会采用国内镜像，或者设置代理服务。</p></div><h3 id="_1-使用阿里云镜像" tabindex="-1"><a class="header-anchor" href="#_1-使用阿里云镜像"><span>1. 使用阿里云镜像</span></a></h3><p>阿里云镜像应该是目前国内使用最普遍的 npm 镜像站了</p><p>镜像官网：<br><a href="https://www.npmmirror.com/" target="_blank" rel="noopener noreferrer">https://www.npmmirror.com/</a></p><p>直接执行如下命令即可完成镜像源的替换</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmmirror.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><details class="hint-container details"><summary>详情</summary><p>它会创建 <code>~/.npmrc</code> 文件，并填充如下内容</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">registry<span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npmmirror<span class="token punctuation">.</span>com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个配置文件如果放在 <code>~/.npmrc</code> 用户目录下就是全局设置，如果放在项目目录下 <code>./.npmrc</code>，则作为项目的独立设置。</p><p>同理，想要换回官方镜像，手动删除 <code>~/.npmrc</code> 中对应的配置项，或者执行如下命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> config delete registry</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="_2-使用全局的命令行代理" tabindex="-1"><a class="header-anchor" href="#_2-使用全局的命令行代理"><span>2. 使用全局的命令行代理</span></a></h3>`,32)),a("blockquote",null,[a("p",null,[n[1]||(n[1]=s("具体细节可参考文章 ",-1)),t(i,{to:"/misc/proxy_wall_ready.html"},{default:p(()=>[...n[0]||(n[0]=[s("科学上网与本地代理",-1)])]),_:1})])]),n[5]||(n[5]=e('<p>如果你把代理关了，使用 npm 更新依赖时会有如下显示</p><figure><img src="'+h+`" alt="npm更新依赖报错" tabindex="0" loading="lazy"><figcaption>npm更新依赖报错</figcaption></figure><hr><div class="hint-container info"><p class="hint-container-title">提示</p><p>上述两种加速方式，可同时使用。</p><p>命令行代理则更为通用一些，本质上也会更安全纯粹一些。</p><p>不过一般情况下 使用阿里云镜像已经可以满足 90% 的场景了。</p></div><hr><h2 id="pnpm" tabindex="-1"><a class="header-anchor" href="#pnpm"><span>pnpm</span></a></h2><p>pnpm 现在呼声很高，因为其非常优异的机制和设计，速度很快。避免了部分 npm 的坑。<br> 是一个非常棒的 npm 的替代品。</p><p>pnpm 官网:<br><a href="https://pnpm.io/zh/" target="_blank" rel="noopener noreferrer">https://pnpm.io/zh/</a></p><p>官网给了很多的 pnpm 的安装方式，但是我推荐的安装方式只有一种</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">pnpm</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>其余的安装方式多多少少都会存在一些问题</p></blockquote><div class="hint-container tip"><p class="hint-container-title">提示</p><p>全局依赖的安装依然推荐使用 <code>npm -g install</code> 命令，项目目录依赖则推荐使用 <code>pnpm install</code> 命令，这样不会乱，而且会很清爽，问题也最少。</p></div><blockquote><p>pnpm 和 npm 一样，会优先使用项目目录的 <code>./.npmrc</code> 配置文件，如果项目目录不存在才会使用 用户目录下的 <code>~/.npmrc</code></p></blockquote><h2 id="windows-下-使用-git-bash-来执行-npm-指令中的脚本" tabindex="-1"><a class="header-anchor" href="#windows-下-使用-git-bash-来执行-npm-指令中的脚本"><span>windows 下 使用 git-bash 来执行 npm 指令中的脚本</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> script-shell <span class="token string">&quot;C:<span class="token entity" title="\\\\">\\\\</span>meichangliang<span class="token entity" title="\\\\">\\\\</span>Git<span class="token entity" title="\\\\">\\\\</span>bin<span class="token entity" title="\\\\">\\\\</span>bash.exe&quot;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>命令中的 <code>&quot;C:\\\\meichangliang\\\\Git\\\\bin\\\\bash.exe&quot;</code> 地址需要更换为你 windows 系统中 Git 的安装目录。</p><p>地址里面 <code>\\\\</code> 中的第一个 <code>\\</code> 实为转义符。</p></div>`,16)),a("p",null,[n[3]||(n[3]=s("详细可 参考 ",-1)),t(i,{to:"/bookmark/tools/git/"},{default:p(()=>[...n[2]||(n[2]=[s("Git 的基本安装和使用",-1)])]),_:1})]),n[6]||(n[6]=e(`<h2 id="环境安装结果的验证" tabindex="-1"><a class="header-anchor" href="#环境安装结果的验证"><span>环境安装结果的验证</span></a></h2><p>打开命令行工具，依次验证如下命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">node</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token comment"># v20.12.2</span></span>
<span class="line"></span>
<span class="line"><span class="token function">npm</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token comment"># 10.5.2</span></span>
<span class="line"></span>
<span class="line"><span class="token function">pnpm</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token comment"># 9.1.2</span></span>
<span class="line"></span>
<span class="line"><span class="token function">npm</span> config get registry</span>
<span class="line"><span class="token function">pnpm</span> config get registry</span>
<span class="line"><span class="token comment"># 如果设置了镜像源 则会输出 https://registry.npmmirror.com 的镜像地址</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world"><span>Hello World</span></a></h2><p>新建 <code>main.js</code> 文件：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="./main.js"><span>./main.js</span></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;Hello World !&#39;</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></div><p>然后使用 <code>node</code> 命令执行该文件:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">node</span> ./main.js</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,8))])}const j=o(u,[["render",b]]),y=JSON.parse('{"path":"/coder/javascript/nodejs_ready.html","title":"1.Nodejs 基础环境搭建","lang":"zh-CN","frontmatter":{"order":1,"permalink":"/coder/javascript/nodejs_ready.html","description":"1.Nodejs 基础环境搭建 严格来说 nodejs 属于服务端的技术，并不属于 Web 前端 , 但是当下前端开发基本上无法离开 nodejs 了。 官网地址： https://nodejs.org/ 在 macOS 和 Windows 上安装 Node.js 注意 macOS 和 Windows 官方都有发布安专门的安装包，所以安装方式基本相同，...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.Nodejs 基础环境搭建\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T14:04:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"墨七\\",\\"url\\":\\"https://mo7.cc\\",\\"email\\":\\"mo7@mo7.cc\\"}]}"],["meta",{"property":"og:url","content":"https://mo7.cc/coder/javascript/nodejs_ready.html"}],["meta",{"property":"og:site_name","content":"墨七"}],["meta",{"property":"og:title","content":"1.Nodejs 基础环境搭建"}],["meta",{"property":"og:description","content":"1.Nodejs 基础环境搭建 严格来说 nodejs 属于服务端的技术，并不属于 Web 前端 , 但是当下前端开发基本上无法离开 nodejs 了。 官网地址： https://nodejs.org/ 在 macOS 和 Windows 上安装 Node.js 注意 macOS 和 Windows 官方都有发布安专门的安装包，所以安装方式基本相同，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T14:04:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-04T14:04:00.000Z"}]]},"git":{"createdTime":1732683764000,"updatedTime":1751637840000,"contributors":[{"name":"墨七","username":"","email":"meichangliang@outlook.com","commits":8}]},"readingTime":{"minutes":3.32,"words":995},"filePathRelative":"coder/javascript/1.nodejs基础环境搭建.md","excerpt":"\\n<p>严格来说 <code>nodejs</code> 属于服务端的技术，并不属于 <code>Web 前端</code> , 但是当下前端开发基本上无法离开 <code>nodejs</code> 了。</p>\\n<p>官网地址：<br>\\n<a href=\\"https://nodejs.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://nodejs.org/</a></p>\\n<h2>在 macOS 和 Windows 上安装 Node.js</h2>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>macOS 和 Windows 官方都有发布安专门的安装包，所以安装方式基本相同，但是得注意区分硬件架构。</p>\\n</div>","autoDesc":true}');export{j as comp,y as data};
