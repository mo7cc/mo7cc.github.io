import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,d as e,a as s,b as i,e as o,w as l,r as n,o as d}from"./app-CDcD9CqU.js";const m="/assets/gbk-BlYhI4AW.png",g="/assets/utf8-SKG5vqPa.png",f={},h={class:"hint-container warning"};function u(_,t){const r=n("RouteLink"),a=n("BiliBili");return d(),c("div",null,[t[4]||(t[4]=e("h1",{id:"_3-文件编码",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-文件编码"},[e("span",null,"3.文件编码")])],-1)),e("div",h,[t[3]||(t[3]=e("p",{class:"hint-container-title"},"注意",-1)),e("p",null,[t[1]||(t[1]=o("注意：本文中的一些超链接你可能会打不开，那很可能是因为需要 ",-1)),i(r,{to:"/coder/basic/proxy_to_net.html"},{default:l(()=>[...t[0]||(t[0]=[o("科学上网",-1)])]),_:1}),t[2]||(t[2]=o("。",-1))])]),t[5]||(t[5]=s('<p>不知道你有没有遇到过，打开一个<code>.txt</code>文件却发现文件乱码了？这种时候往往是因为使用了不一样的编码格式去打开文件导致的。</p><p>比如当前正在编写的这篇文章，如果采用 <a href="https://zh.wikipedia.org/wiki/%E6%B1%89%E5%AD%97%E5%86%85%E7%A0%81%E6%89%A9%E5%B1%95%E8%A7%84%E8%8C%83" target="_blank" rel="noopener noreferrer">GBK</a> 编码打开，就会变成一堆不认识的字符：</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但是同样的一篇文章采用 <a href="https://zh.wikipedia.org/wiki/UTF-8" target="_blank" rel="noopener noreferrer">UTF-8</a> 打开则可以正常阅读：</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>因为这篇文章就是在 <code>UTF-8</code> 编码规则下编写的。 而<code>GBK</code>编码是 windows 系统早期的默认编码。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果没啥特殊需求，一般编写文件内容默认使用 <code>UTF-8</code> 是一定没错的。 <code>UTF-8</code> 现在基本是大多数操作系统的默认编码。</p><p>也是因为编码的问题，所以一般来说，很多国外开发的老式软件无法在 中文目录下成功运行，所以目录名一般不推荐使用中文。</p></div><p>拓展阅读 <a href="https://www.cnblogs.com/Rainingday/p/14641104.html" target="_blank" rel="noopener noreferrer">ASCII 编码、GBK 编码，Unicode 编码和 UTF-8</a></p>',8)),i(a,{bvid:"BV1cB4y177QR"})])}const k=p(f,[["render",u]]),y=JSON.parse('{"path":"/coder/basic/file_utf8.html","title":"3.文件编码","lang":"zh-CN","frontmatter":{"order":3,"permalink":"/coder/basic/file_utf8.html","description":"3.文件编码 注意 注意：本文中的一些超链接你可能会打不开，那很可能是因为需要 。 不知道你有没有遇到过，打开一个.txt文件却发现文件乱码了？这种时候往往是因为使用了不一样的编码格式去打开文件导致的。 比如当前正在编写的这篇文章，如果采用 GBK 编码打开，就会变成一堆不认识的字符： 但是同样的一篇文章采用 UTF-8 打开则可以正常阅读： 因为这篇...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3.文件编码\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T14:04:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"墨七\\",\\"url\\":\\"https://mo7.cc\\",\\"email\\":\\"mo7@mo7.cc\\"}]}"],["meta",{"property":"og:url","content":"https://mo7.cc/coder/basic/file_utf8.html"}],["meta",{"property":"og:site_name","content":"墨七"}],["meta",{"property":"og:title","content":"3.文件编码"}],["meta",{"property":"og:description","content":"3.文件编码 注意 注意：本文中的一些超链接你可能会打不开，那很可能是因为需要 。 不知道你有没有遇到过，打开一个.txt文件却发现文件乱码了？这种时候往往是因为使用了不一样的编码格式去打开文件导致的。 比如当前正在编写的这篇文章，如果采用 GBK 编码打开，就会变成一堆不认识的字符： 但是同样的一篇文章采用 UTF-8 打开则可以正常阅读： 因为这篇..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T14:04:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-04T14:04:00.000Z"}]]},"git":{"createdTime":1732683764000,"updatedTime":1751637840000,"contributors":[{"name":"墨七","username":"","email":"meichangliang@outlook.com","commits":5}]},"readingTime":{"minutes":1.07,"words":322},"filePathRelative":"coder/basic/3.文件编码.md","excerpt":"\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>注意：本文中的一些超链接你可能会打不开，那很可能是因为需要 <a href=\\"/coder/basic/proxy_to_net.html\\" target=\\"_blank\\">科学上网</a>。</p>\\n</div>\\n<p>不知道你有没有遇到过，打开一个<code>.txt</code>文件却发现文件乱码了？这种时候往往是因为使用了不一样的编码格式去打开文件导致的。</p>\\n<p>比如当前正在编写的这篇文章，如果采用 <a href=\\"https://zh.wikipedia.org/wiki/%E6%B1%89%E5%AD%97%E5%86%85%E7%A0%81%E6%89%A9%E5%B1%95%E8%A7%84%E8%8C%83\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GBK</a> 编码打开，就会变成一堆不认识的字符：</p>","autoDesc":true}');export{k as comp,y as data};
