import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as p,o as t}from"./app-CDcD9CqU.js";const e={};function l(c,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="两数之和-twosum" tabindex="-1"><a class="header-anchor" href="#两数之和-twosum"><span>两数之和 (twoSum)</span></a></h1><p><a href="https://leetcode.cn/problems/two-sum/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/two-sum/</a></p><hr><h2 id="解法思路" tabindex="-1"><a class="header-anchor" href="#解法思路"><span>解法思路</span></a></h2><p>用 target 挨个 减去 nums 中的项，然后得出结果，如果结果 nums 中存在，则记录下标</p><h2 id="golang" tabindex="-1"><a class="header-anchor" href="#golang"><span>Golang</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token comment">//go:build ignore</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;fmt&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	nums <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	target <span class="token operator">:=</span> <span class="token number">6</span></span>
<span class="line"></span>
<span class="line">	results <span class="token operator">:=</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> target<span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;results&quot;</span><span class="token punctuation">,</span> results<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	results2 <span class="token operator">:=</span> <span class="token function">twoSum2</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> target<span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;results2&quot;</span><span class="token punctuation">,</span> results2<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 暴力求解</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> target <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span></span>
<span class="line">	returnVal <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">for</span> k1<span class="token punctuation">,</span> v1 <span class="token operator">:=</span> <span class="token keyword">range</span> nums <span class="token punctuation">{</span></span>
<span class="line">		diff <span class="token operator">:=</span> target <span class="token operator">-</span> v1</span>
<span class="line">		<span class="token keyword">for</span> k2<span class="token punctuation">,</span> v2 <span class="token operator">:=</span> <span class="token keyword">range</span> nums <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">if</span> diff <span class="token operator">==</span> v2 <span class="token operator">&amp;&amp;</span> k2 <span class="token operator">!=</span> k1 <span class="token punctuation">{</span></span>
<span class="line">				returnVal <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>returnVal<span class="token punctuation">,</span> k2<span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">return</span> returnVal</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 利用哈希 map</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">twoSum2</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> target <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span></span>
<span class="line">	hashTable <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">for</span> i<span class="token punctuation">,</span> x <span class="token operator">:=</span> <span class="token keyword">range</span> nums <span class="token punctuation">{</span></span>
<span class="line">		p<span class="token punctuation">,</span> ok <span class="token operator">:=</span> hashTable<span class="token punctuation">[</span>target<span class="token operator">-</span>x<span class="token punctuation">]</span></span>
<span class="line">		<span class="token keyword">if</span> ok <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>p<span class="token punctuation">,</span> i<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		hashTable<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> i</span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>JavaScript</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 暴力求解</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> el <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> diff <span class="token operator">=</span> target <span class="token operator">-</span> el<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> idxOf <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>idxOf <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> idxOf <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> idxOf<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 利用哈希map</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">twoSum2</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> el <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> res <span class="token operator">=</span> map<span class="token punctuation">[</span>target <span class="token operator">-</span> el<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">[</span>res<span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    map<span class="token punctuation">[</span>el<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 代码执行块</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// const result = twoSum(nums, target);</span></span>
<span class="line">  <span class="token comment">// console.log(&#39;result&#39;, result);</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token function">twoSum2</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;result2&#39;</span><span class="token punctuation">,</span> result2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)])])}const u=s(e,[["render",l]]),r=JSON.parse('{"path":"/coder/leetcode/twoSum.html","title":"两数之和 (twoSum)","lang":"zh-CN","frontmatter":{"permalink":"/coder/leetcode/twoSum.html","description":"两数之和 (twoSum) https://leetcode.cn/problems/two-sum/ 解法思路 用 target 挨个 减去 nums 中的项，然后得出结果，如果结果 nums 中存在，则记录下标 Golang JavaScript","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"两数之和 (twoSum)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-19T04:13:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"墨七\\",\\"url\\":\\"https://mo7.cc\\",\\"email\\":\\"mo7@mo7.cc\\"}]}"],["meta",{"property":"og:url","content":"https://mo7.cc/coder/leetcode/twoSum.html"}],["meta",{"property":"og:site_name","content":"墨七"}],["meta",{"property":"og:title","content":"两数之和 (twoSum)"}],["meta",{"property":"og:description","content":"两数之和 (twoSum) https://leetcode.cn/problems/two-sum/ 解法思路 用 target 挨个 减去 nums 中的项，然后得出结果，如果结果 nums 中存在，则记录下标 Golang JavaScript"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-19T04:13:15.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-19T04:13:15.000Z"}]]},"git":{"createdTime":1732683764000,"updatedTime":1755576795000,"contributors":[{"name":"墨七","username":"","email":"meichangliang@outlook.com","commits":8}]},"readingTime":{"minutes":0.17,"words":51},"filePathRelative":"coder/leetcode/两数之和/README.md","excerpt":"\\n<p><a href=\\"https://leetcode.cn/problems/two-sum/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://leetcode.cn/problems/two-sum/</a></p>\\n<hr>\\n<h2>解法思路</h2>\\n<p>用 target 挨个 减去 nums 中的项，然后得出结果，如果结果 nums 中存在，则记录下标</p>\\n<h2>Golang</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"go\\"><pre><code class=\\"language-go\\"><span class=\\"line\\"><span class=\\"token comment\\">//go:build ignore</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">package</span> main</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span></span>\\n<span class=\\"line\\">\\t<span class=\\"token string\\">\\"fmt\\"</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\tnums <span class=\\"token operator\\">:=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\t\\t<span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">\\t<span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\ttarget <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">6</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">\\tresults <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">twoSum</span><span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">,</span> target<span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"results\\"</span><span class=\\"token punctuation\\">,</span> results<span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">\\tresults2 <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">twoSum2</span><span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">,</span> target<span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"results2\\"</span><span class=\\"token punctuation\\">,</span> results2<span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 暴力求解</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">twoSum</span><span class=\\"token punctuation\\">(</span>nums <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> target <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\treturnVal <span class=\\"token operator\\">:=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\t<span class=\\"token keyword\\">for</span> k1<span class=\\"token punctuation\\">,</span> v1 <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">range</span> nums <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\t\\tdiff <span class=\\"token operator\\">:=</span> target <span class=\\"token operator\\">-</span> v1</span>\\n<span class=\\"line\\">\\t\\t<span class=\\"token keyword\\">for</span> k2<span class=\\"token punctuation\\">,</span> v2 <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">range</span> nums <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\t\\t\\t<span class=\\"token keyword\\">if</span> diff <span class=\\"token operator\\">==</span> v2 <span class=\\"token operator\\">&amp;&amp;</span> k2 <span class=\\"token operator\\">!=</span> k1 <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\t\\t\\t\\treturnVal <span class=\\"token operator\\">=</span> <span class=\\"token function\\">append</span><span class=\\"token punctuation\\">(</span>returnVal<span class=\\"token punctuation\\">,</span> k2<span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">\\t\\t\\t<span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\t\\t<span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\t<span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\t<span class=\\"token keyword\\">return</span> returnVal</span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 利用哈希 map</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">twoSum2</span><span class=\\"token punctuation\\">(</span>nums <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> target <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\thashTable <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">map</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\t<span class=\\"token keyword\\">for</span> i<span class=\\"token punctuation\\">,</span> x <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">range</span> nums <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\t\\tp<span class=\\"token punctuation\\">,</span> ok <span class=\\"token operator\\">:=</span> hashTable<span class=\\"token punctuation\\">[</span>target<span class=\\"token operator\\">-</span>x<span class=\\"token punctuation\\">]</span></span>\\n<span class=\\"line\\">\\t\\t<span class=\\"token keyword\\">if</span> ok <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">\\t\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span>p<span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\t\\t<span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\t\\thashTable<span class=\\"token punctuation\\">[</span>x<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> i</span>\\n<span class=\\"line\\">\\t<span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">nil</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{u as comp,r as data};
